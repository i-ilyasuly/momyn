import os
from dotenv import load_dotenv

load_dotenv()

class Config:
    TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
    OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
    OPENAI_ASSISTANT_ID = os.getenv('OPENAI_ASSISTANT_ID')
    VECTOR_STORE_ID = os.getenv('VECTOR_STORE_ID')
    
    # –°–µ—Å—Å–∏—è —É–∞“õ—ã—Ç—ã (—Å–µ–∫—É–Ω–¥–ø–µ–Ω)
    SESSION_TIMEOUT = 24 * 60 * 60  # 24 —Å–∞“ì–∞—Ç
    
    # –°—É—Ä–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ
    MAX_IMAGE_SIZE = (1024, 1024)
    ALLOWED_IMAGE_FORMATS = ['JPEG', 'PNG', 'WEBP']
    
    @classmethod
    def validate_config(cls):
        """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–Ω—ã —Ç–µ–∫—Å–µ—Ä—É"""
        missing_vars = []
        
        if not cls.TELEGRAM_BOT_TOKEN:
            missing_vars.append('TELEGRAM_BOT_TOKEN')
        
        if not cls.OPENAI_API_KEY:
            missing_vars.append('OPENAI_API_KEY')
        
        if not cls.OPENAI_ASSISTANT_ID:
            missing_vars.append('OPENAI_ASSISTANT_ID')
        
        if missing_vars:
            print(f"‚ùå –ö–µ–ª–µ—Å—ñ environment variable-–¥–∞—Ä –∂–æ“õ: {', '.join(missing_vars)}")
            print("üìù .env —Ñ–∞–π–ª—ã–Ω–¥–∞ –æ—Ä–Ω–∞—Ç—ã“£—ã–∑:")
            for var in missing_vars:
                print(f"   {var}=your_value_here")
            return False
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥“±—Ä—ã—Å –æ—Ä–Ω–∞—Ç—ã–ª“ì–∞–Ω")
        return True
